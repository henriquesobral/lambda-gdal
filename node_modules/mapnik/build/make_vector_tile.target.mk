# This file is generated by gyp; do not edit.

TOOLSET := target
TARGET := make_vector_tile
### Rules for action "generate_protoc_files":
quiet_cmd_binding_gyp_make_vector_tile_target_generate_protoc_files = ACTION binding_gyp_make_vector_tile_target_generate_protoc_files $@
cmd_binding_gyp_make_vector_tile_target_generate_protoc_files = LD_LIBRARY_PATH=$(builddir)/lib.host:$(builddir)/lib.target:$$LD_LIBRARY_PATH; export LD_LIBRARY_PATH; cd $(srcdir)/.; mkdir -p $(obj)/gen; protoc "-I$(abspath $<)" "--cpp_out=$(obj)/gen/" "$(abspath $<)/vector_tile.proto"

$(obj)/gen/vector_tile.pb.cc: obj := $(abs_obj)
$(obj)/gen/vector_tile.pb.cc: builddir := $(abs_builddir)
$(obj)/gen/vector_tile.pb.cc: TOOLSET := $(TOOLSET)
$(obj)/gen/vector_tile.pb.cc: $(srcdir)/node_modules/mapnik-vector-tile/proto FORCE_DO_CMD
	$(call do_cmd,binding_gyp_make_vector_tile_target_generate_protoc_files)
$(obj)/gen/vector_tile.pb.h: $(obj)/gen/vector_tile.pb.cc
$(obj)/gen/vector_tile.pb.h: ;

all_deps += $(obj)/gen/vector_tile.pb.cc $(obj)/gen/vector_tile.pb.h
action_binding_gyp_make_vector_tile_target_generate_protoc_files_outputs := $(obj)/gen/vector_tile.pb.cc $(obj)/gen/vector_tile.pb.h

### Rules for action "generate_setting":
quiet_cmd_binding_gyp_make_vector_tile_target_generate_setting = ACTION binding_gyp_make_vector_tile_target_generate_setting $@
cmd_binding_gyp_make_vector_tile_target_generate_setting = LD_LIBRARY_PATH=$(builddir)/lib.host:$(builddir)/lib.target:$$LD_LIBRARY_PATH; export LD_LIBRARY_PATH; cd $(srcdir)/.; mkdir -p $(obj)/gen; python gen_settings.py "$(obj)/gen/mapnik_settings.js"

$(obj)/gen/mapnik_settings.js: obj := $(abs_obj)
$(obj)/gen/mapnik_settings.js: builddir := $(abs_builddir)
$(obj)/gen/mapnik_settings.js: TOOLSET := $(TOOLSET)
$(obj)/gen/mapnik_settings.js: $(srcdir)/gen_settings.py FORCE_DO_CMD
	$(call do_cmd,binding_gyp_make_vector_tile_target_generate_setting)

all_deps += $(obj)/gen/mapnik_settings.js
action_binding_gyp_make_vector_tile_target_generate_setting_outputs := $(obj)/gen/mapnik_settings.js


### Generated for copy rule.
/home/ec2-user/lambda/node_modules/mapnik/lib/binding/node-v46-linux-x64/mapnik_settings.js: TOOLSET := $(TOOLSET)
/home/ec2-user/lambda/node_modules/mapnik/lib/binding/node-v46-linux-x64/mapnik_settings.js: $(obj)/gen/mapnik_settings.js FORCE_DO_CMD
	$(call do_cmd,copy)

all_deps += /home/ec2-user/lambda/node_modules/mapnik/lib/binding/node-v46-linux-x64/mapnik_settings.js
binding_gyp_make_vector_tile_target_copies = /home/ec2-user/lambda/node_modules/mapnik/lib/binding/node-v46-linux-x64/mapnik_settings.js

### Rules for final target.
# Build our special outputs first.
$(obj).target/make_vector_tile.stamp: | $(action_binding_gyp_make_vector_tile_target_generate_protoc_files_outputs) $(action_binding_gyp_make_vector_tile_target_generate_setting_outputs) $(binding_gyp_make_vector_tile_target_copies)

# Preserve order dependency of special output on deps.
$(action_binding_gyp_make_vector_tile_target_generate_protoc_files_outputs) $(action_binding_gyp_make_vector_tile_target_generate_setting_outputs) $(binding_gyp_make_vector_tile_target_copies): | 

$(obj).target/make_vector_tile.stamp: TOOLSET := $(TOOLSET)
$(obj).target/make_vector_tile.stamp:  FORCE_DO_CMD
	$(call do_cmd,touch)

all_deps += $(obj).target/make_vector_tile.stamp
# Add target alias
.PHONY: make_vector_tile
make_vector_tile: $(obj).target/make_vector_tile.stamp

# Add target alias to "all" target.
.PHONY: all
all: make_vector_tile

